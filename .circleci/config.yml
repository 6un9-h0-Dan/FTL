version: 2

.job_template: &job_template
  docker:
    - image: "thepihole/ftl-build:$TARGET"
  steps:
    - checkout
    - run:
        name: "Setup"
        command: |
          make clean
    - run:
        name: "Build"
        command: |
          make CFLAGS="${CFLAGS}" GIT_BRANCH="${CIRCLE_BRANCH}" GIT_TAG="${CIRCLE_TAG}"
          file pihole-FTL
    - store_artifacts:
        path: pihole-FTL

jobs:
  arm:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-arm-linux-gnueabi"
      TARGET: "armel"

  armhf:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-arm-linux-gnueabihf"
      TARGET: "armhf"

  aarch64:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-aarch64-linux-gnu"
      TARGET: "aarch64"

  x86_64:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-linux-x86_64"
      TARGET: "x86_64"

  x86_64-musl:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-musl-linux-x86_64"
      TARGET: "x86_64-musl"

  x86_32:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-linux-x86_32"
      TARGET: "x86_32"
      CFLAGS: "-m32"

  ppc64le:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-powerpc64le-linux-gnu"
      TARGET: "ppc64le"

workflows:
  version: 2
  build:
    jobs:
      - arm
      - armhf
      - aarch64
      - x86_64
#      - x86_64-musl
      - x86_32
      - ppc64le
