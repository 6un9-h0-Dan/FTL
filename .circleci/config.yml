version: 2

.job_steps: &job_steps
  steps:
    - checkout
    - run:
        name: "Setup"
        command: |
          make clean
          if [[ $CIRCLE_JOB == *"qemu"* ]] ; then sudo docker run --rm --privileged multiarch/qemu-user-static:register --reset ; fi
    - run:
        name: "Build"
        command: |
          BRANCH=$([ -z "$CIRCLE_TAG" ] && echo "$CIRCLE_BRANCH" || echo "master")
          [[ $CIRCLE_JOB == *"qemu"* ]] && DOCKERIFNEEDED="docker run --rm -v $(pwd):/workspace -w /workspace pihole/ftl-build:arm-qemu "
          $DOCKERIFNEEDED make GIT_BRANCH="${BRANCH}" GIT_TAG="${CIRCLE_TAG}"
          file pihole-FTL
    - run:
        name: "Upload"
        command: |
          [[ "$CIRCLE_PR_NUMBER" != "" ]] && exit 0
          [[ "$CIRCLE_USERNAME" != "pi-hole" ]] && exit 0
          FOLDER=$([ -z "$CIRCLE_TAG" ] && echo "$CIRCLE_BRANCH" || echo "$CIRCLE_TAG")
          mv pihole-FTL "${BIN_NAME}"
          sha1sum pihole-FTL-* > ${BIN_NAME}.sha1
          wget https://ftl.pi-hole.net:8080/FTL-client
          chmod +x ./FTL-client
          ./FTL-client "${FOLDER}" "${BIN_NAME}" "${FTL_SECRET}"
          ./FTL-client "${FOLDER}" "${BIN_NAME}.sha1" "${FTL_SECRET}"
          rm ./FTL-client
          ls -lah .

.docker_template: &docker_template
  docker:
    - image: pihole/ftl-build:$CIRCLE_JOB
  <<: *job_steps

jobs:
  arm:
    <<: *docker_template
    environment:
      BIN_NAME: "pihole-FTL-arm-linux-gnueabi"

  armhf:
    <<: *docker_template
    environment:
      BIN_NAME: "pihole-FTL-arm-linux-gnueabihf"

  aarch64:
    <<: *docker_template
    environment:
      BIN_NAME: "pihole-FTL-aarch64-linux-gnu"

  x86_64:
    <<: *docker_template
    environment:
      BIN_NAME: "pihole-FTL-linux-x86_64"

  x86_64-musl:
    <<: *docker_template
    environment:
      BIN_NAME: "pihole-FTL-musl-linux-x86_64"

  x86_32:
    <<: *docker_template
    environment:
      BIN_NAME: "pihole-FTL-linux-x86_32"

  arm-qemu:
    machine:
      enabled: true
    environment:
      BIN_NAME: "pihole-FTL-armel-native"
    <<: *job_steps

workflows:
  version: 2
  build:
    jobs:
      - arm:
          filters:
            tags:
              only: /^v.*/
      - arm-qemu:
          filters:
            tags:
              only: /^v.*/
      - armhf:
          filters:
            tags:
              only: /^v.*/
      - aarch64:
          filters:
            tags:
              only: /^v.*/
      - x86_64:
          filters:
            tags:
              only: /^v.*/
#      - x86_64-musl
      - x86_32:
          filters:
            tags:
              only: /^v.*/

