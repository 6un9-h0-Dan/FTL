version: 2

.job_template: &job_template
  docker:
    - image: pihole/ftl-build:$CIRCLE_JOB
  steps:
    - checkout
    - run:
        name: "Setup"
        command: |
          make clean
    - run:
        name: "Build"
        command: |
          BRANCH=$([ -z "$CIRCLE_TAG" ] && echo "$CIRCLE_BRANCH" || echo "master")

          make GIT_BRANCH="${BRANCH}" GIT_TAG="${CIRCLE_TAG}"
          file pihole-FTL
    - run:
        name: "Upload"
        command: |
          [[ -z "$FTL_SECRET" || "$CIRCLE_PR_NUMBER" != "" ]] && exit 0
          DIR="${CIRCLE_TAG:-${CIRCLE_BRANCH}}"
          mv pihole-FTL "${BIN_NAME}"
          sha1sum pihole-FTL-* > ${BIN_NAME}.sha1
          mkdir -p ~/.ssh/
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
          sftp -b - $SSH_USER@$SSH_HOST <<< "-mkdir ${DIR}
          put ${BIN_NAME}* ${DIR}"
          mv "${BIN_NAME}" pihole-FTL
    - run:
        name: "Test"
        command: |
          test/run.sh

jobs:
  arm:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-arm-linux-gnueabi"

  armhf:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-arm-linux-gnueabihf"

  aarch64:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-aarch64-linux-gnu"

  x86_64:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-linux-x86_64"

  x86_64-musl:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-musl-linux-x86_64"

  x86_32:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-linux-x86_32"

workflows:
  version: 2
  build:
    jobs:
      - arm:
          filters:
            tags:
              only: /^v.*/
      - armhf:
          filters:
            tags:
              only: /^v.*/
      - aarch64:
          filters:
            tags:
              only: /^v.*/
      - x86_64:
          filters:
            tags:
              only: /^v.*/
      - x86_64-musl:
          filters:
            tags:
              only: /^v.*/
      - x86_32:
          filters:
            tags:
              only: /^v.*/

